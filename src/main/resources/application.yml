spring:
  application:
    name: lms-lti-3rdpartyprovisioning
  profiles:
    active: redis
  session:
    store-type: none
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        temp:
          use_jdbc_metadata_defaults: false
      jadira:
        usertype:
          autoRegisterUserTypes: true
  output:
    ansi:
      enabled: ALWAYS
  datasource:
    driverClassName: ${lms.db.driverClass}
    url: ${lms.db.url}
    username: ${lms.db.user}
    password: ${lms.db.password}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${oauth.tokenprovider.url}/.well-known/jwks.json

deptprov:
  version: @app.version@
  env: ${app.env}
  prd:
    guestAccountCreationUrl: https://eaa.apps.iu.edu
    canvasServiceName: CanvasProd
    expandServiceName: ExpandProd
  stg:
    guestAccountCreationUrl: https://eaa-stg.apps-test.iu.edu
    canvasServiceName: CanvasTest
    expandServiceName: ExpandBeta
  reg:
    guestAccountCreationUrl: https://eaa-stg.apps-test.iu.edu
    canvasServiceName: CanvasBeta
    expandServiceName: ExpandBeta
  snd:
    guestAccountCreationUrl: https://eaa-stg.apps-test.iu.edu
    canvasServiceName: CanvasSand
    expandServiceName: ExpandBeta
  dev:
    guestAccountCreationUrl: https://eaa-stg.apps-test.iu.edu
    canvasServiceName: CanvasBeta
    expandServiceName: ExpandBeta
  ci:
    guestAccountCreationUrl: https://eaa-stg.apps-test.iu.edu
    canvasServiceName: CanvasBeta
    expandServiceName: ExpandBeta
  guestAccountCreationUrl: ${deptprov.${app.env}.guestAccountCreationUrl}
  canvasServiceName: ${deptprov.${app.env}.canvasServiceName}
  expandServiceName: ${deptprov.${app.env}.expandServiceName}

---

spring:
  profiles: redis
  session:
    store-type: redis
    redis.namespace: deptprov-${app.version}:session

