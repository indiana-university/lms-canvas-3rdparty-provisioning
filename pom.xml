<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>lms-lti-3rdpartyprovisioning</artifactId>
    <packaging>jar</packaging>
    <name>lms-lti-3rdpartyprovisioning</name>

    <parent>
        <artifactId>lms2Wow</artifactId>
<!--        <relativePath>../pom.xml</relativePath>-->
        <groupId>edu.iu.uits.lms</groupId>
        <version>4.0.0-SNAPSHOT</version>
    </parent>

    <properties>
        <app.version>${project.version}</app.version>
        <docker_repository_name>lti_3rdpartyprovisioning</docker_repository_name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-lti-web</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-canvas-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>common-configuration</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-rivet</artifactId>
            <version>4.1.7.0</version>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>redis-config</artifactId>
        </dependency>
    </dependencies>


    <build>
        <finalName>lms-lti-3rdpartyprovisioning</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <configuration>
                    <repository>${docker_repository_name}</repository>
                </configuration>
                <executions>
                    <execution>
                        <id>build-latest</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <tag>latest</tag>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
            <testResource>
                <filtering>false</filtering>
                <directory>${project.build.directory}/impl-resources</directory>
            </testResource>
        </testResources>
    </build>

    <profiles>
        <profile>
            <id>docker-push</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <configuration>
                            <repository>${docker_repository_base}${docker_repository_name}</repository>
                        </configuration>
                        <executions>
                            <execution>
                                <id>push-latest</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>latest</tag>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-version</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>${project.version}</tag>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
